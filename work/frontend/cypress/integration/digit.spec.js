/**
 * STRING_COMPETITION STRING_YEAR - STRING_TRADE - STRING_TITLE
 * Frontend - Task 1
 *
 * This file contains the unit tests performed on the frontend task.
 * You may look at the test cases but not modify them.
 *
 * !!! DO NOT EDIT THIS FILE !!!
 */

const Digit = require('../../src/digit.js')

describe('Digit', () => {
    beforeEach(() => {
        cy.visit('/cypress/fixtures/digit.html')
        cy.wait(500)
    })

    afterEach(() => {
        cy.wait(500)
    })

    it('can instantiate a digit', () => {
        cy.get('#seconds-1').then(([el]) => {
            const digit = new Digit(el)

            expect(digit.getElement()).to.equal(el)
            expect(digit.getValue()).to.equal(8)

            const digit2 = new Digit(el, 2)

            expect(digit2.getElement()).to.equal(el)
            expect(digit2.getValue()).to.equal(2)
        })
    })

    it('can set a digit\'s value after instantiating', () => {
        cy.get('#seconds-1').then(([el]) => {
            const digit = new Digit(el)

            expect(digit.getElement()).to.equal(el)
            expect(digit.getValue()).to.equal(8)

            digit.setValue(5)
            expect(digit.getElement()).to.equal(el)
            expect(digit.getValue()).to.equal(5)
        })
    })

    it('throws an error when an invalid value is set', () => {
        cy.get('#seconds-1').then(([el]) => {
            expect(() => {
                const digit = new Digit(el)
                digit.setValue(10)
            }).to.throw()

            expect(() => {
                const digit = new Digit(el)
                digit.setValue(-7)
            }).to.throw()

            expect(() => {
                new Digit(el, 12)
            }).to.throw()

            expect(() => {
                new Digit(el, -3)
            }).to.throw()
        })
    })

    it('can set a digit\'s strokes to display the number 0', () => {
        cy.get('#seconds-1').then(([el]) => {
            new Digit(el, 0)

            expect(el.querySelector('.stroke-horizontal:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:nth-child(3)')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:last-child')).to.have.class('on')
        })
    })

    it('can set a digit\'s strokes to display the number 1', () => {
        cy.get('#seconds-1').then(([el]) => {
            new Digit(el, 1)

            expect(el.querySelector('.stroke-horizontal:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:nth-child(3)')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:last-child')).not.to.have.class('on')
        })
    })

    it('can set a digit\'s strokes to display the number 2', () => {
        cy.get('#seconds-1').then(([el]) => {
            new Digit(el, 2)

            expect(el.querySelector('.stroke-horizontal:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:nth-child(3)')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:last-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:last-child')).to.have.class('on')
        })
    })

    it('can set a digit\'s strokes to display the number 3', () => {
        cy.get('#seconds-1').then(([el]) => {
            new Digit(el, 3)

            expect(el.querySelector('.stroke-horizontal:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:nth-child(3)')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:last-child')).to.have.class('on')
        })
    })

    it('can set a digit\'s strokes to display the number 4', () => {
        cy.get('#seconds-1').then(([el]) => {
            new Digit(el, 4)

            expect(el.querySelector('.stroke-horizontal:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:nth-child(3)')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:last-child')).not.to.have.class('on')
        })
    })

    it('can set a digit\'s strokes to display the number 5', () => {
        cy.get('#seconds-1').then(([el]) => {
            new Digit(el, 5)

            expect(el.querySelector('.stroke-horizontal:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:last-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:nth-child(3)')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:last-child')).to.have.class('on')
        })
    })

    it('can set a digit\'s strokes to display the number 6', () => {
        cy.get('#seconds-1').then(([el]) => {
            new Digit(el, 6)

            expect(el.querySelector('.stroke-horizontal:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:last-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:nth-child(3)')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:last-child')).to.have.class('on')
        })
    })

    it('can set a digit\'s strokes to display the number 7', () => {
        cy.get('#seconds-1').then(([el]) => {
            new Digit(el, 7)

            expect(el.querySelector('.stroke-horizontal:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:nth-child(3)')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:last-child')).not.to.have.class('on')
        })
    })

    it('can set a digit\'s strokes to display the number 8', () => {
        cy.get('#seconds-1').then(([el]) => {
            new Digit(el, 8)

            expect(el.querySelector('.stroke-horizontal:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:nth-child(3)')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:last-child')).to.have.class('on')
        })
    })

    it('can set a digit\'s strokes to display the number 9', () => {
        cy.get('#seconds-1').then(([el]) => {
            new Digit(el, 9)

            expect(el.querySelector('.stroke-horizontal:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:nth-child(3)')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:last-child')).to.have.class('on')
        })
    })

    it('can update the strokes when setting a digit\'s value after instantiating', () => {
        cy.get('#seconds-1').then(([el]) => {
            const digit = new Digit(el)

            digit.setValue(3)

            expect(el.querySelector('.stroke-horizontal:first-child')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(2) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:nth-child(3)')).to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:first-child')).not.to.have.class('on')
            expect(el.querySelector('.stroke-vertical-wrapper:nth-child(4) .stroke-vertical:last-child')).to.have.class('on')
            expect(el.querySelector('.stroke-horizontal:last-child')).to.have.class('on')
        })
    })
})
